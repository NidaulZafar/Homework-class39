2022-09-07 03:11:05 info: ---------------------------------------
2022-09-07 03:11:05 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-07 03:11:05 info: ---------------------------------------
2022-09-07 03:11:09 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (3 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls
    ✓ should call `new Promise()`
    ✓ should take a single argument (1 ms)
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✕ should resolve when called with a string argument (7 ms)
    ✕ should reject with an Error object when called without an argument

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● getAnonName › should resolve when called with a string argument

    TypeError: getAnonName is not a function

      75 |       .spyOn(global, 'setTimeout')
      76 |       .mockImplementation((cb) => cb());
    > 77 |     const promise = getAnonName('John');
         |                     ^
      78 |     timeoutSpy.mockRestore();
      79 |     expect(promise).toBeInstanceOf(Promise);
      80 |     return expect(promise).resolves.toEqual('John Doe');

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:77:21)

  ● getAnonName › should resolve when called with a string argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      70 |
      71 |   test('should resolve when called with a string argument', async () => {
    > 72 |     expect.assertions(3);
         |            ^
      73 |     expect(exported).toBeDefined();
      74 |     const timeoutSpy = jest
      75 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:72:12)

  ● getAnonName › should reject with an Error object when called without an argument

    TypeError: getAnonName is not a function

      87 |       .spyOn(global, 'setTimeout')
      88 |       .mockImplementation((cb) => cb());
    > 89 |     const promise = getAnonName();
         |                     ^
      90 |     timeoutSpy.mockRestore();
      91 |     expect(promise).toBeInstanceOf(Promise);
      92 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:89:21)

  ● getAnonName › should reject with an Error object when called without an argument

    expect.assertions(3)

    Expected three assertions to be called but received one assertion call.

      82 |
      83 |   test('should reject with an Error object when called without an argument', async () => {
    > 84 |     expect.assertions(3);
         |            ^
      85 |     expect(exported).toBeDefined();
      86 |     const timeoutSpy = jest
      87 |       .spyOn(global, 'setTimeout')

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js:84:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 6 passed, 9 total
Snapshots:   0 total
Time:        1.02 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-09-07 03:11:11 error: *** ESLint Report ***

ex1-johnWho.js
  12:7  error    'getAnonName' is assigned a value but never used  no-unused-vars
  24:1  warning  Remove commented-out code                         hyf/no-commented-out-code
  29:1  warning  Remove commented-out code                         hyf/no-commented-out-code

✖ 3 problems (1 error, 2 warnings)


2022-09-07 03:11:55 info: ---------------------------------------
2022-09-07 03:11:55 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-07 03:11:55 info: ---------------------------------------
2022-09-07 03:11:58 error: *** Unit Test Error Report ***

Command failed: npx jest ex1-johnWho.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex1-johnWho.test.js
  getAnonName
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✓ `getAnonName` should not contain unneeded console.log calls (1 ms)
    ✓ should call `new Promise()` (1 ms)
    ✓ should take a single argument
    ✓ `resolve()` should be called with a one argument (1 ms)
    ✓ `reject()` should be called with a one argument
    ✓ should resolve when called with a string argument (3 ms)
    ✓ should reject with an Error object when called without an argument (11 ms)

  ● getAnonName › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 8 passed, 9 total
Snapshots:   0 total
Time:        0.802 s, estimated 1 s
Ran all test suites matching /ex1-johnWho.test.js/i.
2022-09-07 03:12:44 info: ---------------------------------------
2022-09-07 03:12:44 info: >>> Running Unit Test `ex1-johnWho` <<<
2022-09-07 03:12:44 info: ---------------------------------------
2022-09-07 03:12:48 info: All unit tests passed.
2022-09-07 03:12:52 info: All steps were completed successfully
2022-09-07 03:14:27 info: -------------------------------------------------
2022-09-07 03:14:27 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-09-07 03:14:27 info: -------------------------------------------------
2022-09-07 03:14:27 info: Exercise has not yet been modified
2022-09-07 03:14:30 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable (2 ms)
    ✕ should have all TODO comments removed (2 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✕ should call new Promise() (1 ms)
    ✕ `resolve()` should be called with a one argument (2 ms)
    ✕ `reject()` should be called with a one argument
    ✕ should be a function that takes a single argument (1 ms)
    ✕ (9) should return a rejected promise with an Error object (1 ms)
    ✕ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object

  ● checkDoubleDigits › should have all TODO comments removed

    expect(received).toBeFalsy()

    Received: true

      103 | function testTodosRemoved(getSource) {
      104 |   test('should have all TODO comments removed', () => {
    > 105 |     expect(/\bTODO\b/.test(getSource())).toBeFalsy();
          |                                          ^
      106 |   });
      107 | }
      108 |

      at Object.<anonymous> (test-runner/unit-test-helpers.js:105:42)

  ● checkDoubleDigits › should call new Promise()

    expect(received).toBeDefined()

    Received: undefined

      43 |
      44 |   test('should call new Promise()', () => {
    > 45 |     expect(state.newPromise).toBeDefined();
         |                              ^
      46 |   });
      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:45:30)

  ● checkDoubleDigits › `resolve()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      47 |
      48 |   test('`resolve()` should be called with a one argument', () => {
    > 49 |     expect(state.resolve).toBe(1);
         |                           ^
      50 |   });
      51 |
      52 |   test('`reject()` should be called with a one argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:49:27)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › should be a function that takes a single argument

    expect(received).toBe(expected) // Object.is equality

    Expected: true
    Received: false

      58 |     expect(
      59 |       typeof checkDoubleDigits === 'function' && checkDoubleDigits.length === 1
    > 60 |     ).toBe(true);
         |       ^
      61 |   });
      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:60:7)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      64 |     expect.assertions(2);
      65 |     const promise = checkDoubleDigits(9);
    > 66 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);
      68 |   });
      69 |

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:66:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
    > 74 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      75 |     return expect(promise).resolves.toEqual(
      76 |       expect.stringContaining('This is a double digit number!')
      77 |     );

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:74:21)

  ● checkDoubleDigits › (10) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(3)

    Expected three assertions to be called but received two assertion calls.

      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {
    > 71 |     expect.assertions(3);
         |            ^
      72 |     expect(exported).toBeDefined();
      73 |     const promise = checkDoubleDigits(10);
      74 |     expect(promise).toBeInstanceOf(Promise);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:71:12)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      81 |     expect.assertions(2);
      82 |     const promise = checkDoubleDigits(99);
    > 83 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      84 |     return expect(promise).resolves.toEqual(
      85 |       expect.stringContaining('This is a double digit number!')
      86 |     );

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:83:21)

  ● checkDoubleDigits › (99) should return a promise that resolves to "This is a double digit number!"

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      79 |
      80 |   test('(99) should return a promise that resolves to "This is a double digit number!"', () => {
    > 81 |     expect.assertions(2);
         |            ^
      82 |     const promise = checkDoubleDigits(99);
      83 |     expect(promise).toBeInstanceOf(Promise);
      84 |     return expect(promise).resolves.toEqual(

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:81:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).toBeInstanceOf(expected)

    Expected constructor: Promise

    Received value has no prototype
    Received value: undefined

      90 |     expect.assertions(2);
      91 |     const promise = checkDoubleDigits(100);
    > 92 |     expect(promise).toBeInstanceOf(Promise);
         |                     ^
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);
      94 |   });
      95 | });

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:92:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       9 failed, 2 passed, 11 total
Snapshots:   0 total
Time:        0.819 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-09-07 03:14:39 info: Disclaimer turned off
2022-09-09 03:49:02 info: -------------------------------------------------
2022-09-09 03:49:02 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-09-09 03:49:02 info: -------------------------------------------------
2022-09-09 03:49:06 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js
  checkDoubleDigits
    ✓ should exist and be executable (2 ms)
    ✓ should have all TODO comments removed (1 ms)
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (2 ms)
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✓ `reject()` should be called with a one argument
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (4 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (2 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✕ (100) should return a rejected promise with an Error object (1 ms)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 9"

      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
    > 67 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      68 |   });
      69 |
      70 |   test('(10) should return a promise that resolves to "This is a double digit number!"', () => {

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:67:36)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect(received).rejects.toBeInstanceOf(expected)

    Expected constructor: Error

    Received value has no prototype
    Received value: "Expected a double digit number but got 100"

      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
    > 93 |     return expect(promise).rejects.toBeInstanceOf(Error);
         |                                    ^
      94 |   });
      95 | });
      96 |

      at Object.toBeInstanceOf (node_modules/expect/build/index.js:285:22)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:93:36)

Test Suites: 1 failed, 1 total
Tests:       2 failed, 9 passed, 11 total
Snapshots:   0 total
Time:        0.807 s, estimated 1 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-09-09 03:51:44 info: -------------------------------------------------
2022-09-09 03:51:44 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-09-09 03:51:44 info: -------------------------------------------------
2022-09-09 03:51:57 error: *** Unit Test Error Report ***

Command failed: npx jest ex2-checkDoubleDigits.test.js --colors
Browserslist: caniuse-lite is outdated. Please run:
  npx browserslist@latest --update-db
  Why you should do it regularly: https://github.com/browserslist/browserslist#browsers-data-updating
 FAIL  3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js (10.586 s)
  checkDoubleDigits
    ✓ should exist and be executable (2 ms)
    ✓ should have all TODO comments removed
    ✓ `checkDoubleDigits` should not contain unneeded console.log calls (1 ms)
    ✓ should call new Promise()
    ✓ `resolve()` should be called with a one argument
    ✕ `reject()` should be called with a one argument (2 ms)
    ✓ should be a function that takes a single argument
    ✕ (9) should return a rejected promise with an Error object (5006 ms)
    ✓ (10) should return a promise that resolves to "This is a double digit number!" (1 ms)
    ✓ (99) should return a promise that resolves to "This is a double digit number!"
    ✕ (100) should return a rejected promise with an Error object (5003 ms)

  ● checkDoubleDigits › `reject()` should be called with a one argument

    expect(received).toBe(expected) // Object.is equality

    Expected: 1
    Received: undefined

      51 |
      52 |   test('`reject()` should be called with a one argument', () => {
    > 53 |     expect(state.reject).toBe(1);
         |                          ^
      54 |   });
      55 |
      56 |   test('should be a function that takes a single argument', () => {

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:53:26)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    Expected a double digit number but got 9

      19 |     } else {
      20 |       Promise.reject(
    > 21 |         new Error(`Expected a double digit number but got ${num}`)
         |         ^
      22 |       );
      23 |     }
      24 |   });

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:21:9
      at checkDoubleDigits (3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:16:10)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:65:21)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      61 |   });
      62 |
    > 63 |   test('(9) should return a rejected promise with an Error object', () => {
         |   ^
      64 |     expect.assertions(2);
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);

      at 3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:63:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:10:1)

  ● checkDoubleDigits › (9) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      62 |
      63 |   test('(9) should return a rejected promise with an Error object', () => {
    > 64 |     expect.assertions(2);
         |            ^
      65 |     const promise = checkDoubleDigits(9);
      66 |     expect(promise).toBeInstanceOf(Promise);
      67 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:64:12)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    Expected a double digit number but got 100

      19 |     } else {
      20 |       Promise.reject(
    > 21 |         new Error(`Expected a double digit number but got ${num}`)
         |         ^
      22 |       );
      23 |     }
      24 |   });

      at 3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:21:9
      at checkDoubleDigits (3-UsingAPIs/Week1/homework/ex2-checkDoubleDigits.js:16:10)
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:91:21)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    thrown: "Exceeded timeout of 5000 ms for a test.
    Use jest.setTimeout(newTimeout) to increase the timeout value, if this is a long-running test."

      87 |   });
      88 |
    > 89 |   test('(100) should return a rejected promise with an Error object', () => {
         |   ^
      90 |     expect.assertions(2);
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);

      at 3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:89:3
      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:10:1)

  ● checkDoubleDigits › (100) should return a rejected promise with an Error object

    expect.assertions(2)

    Expected two assertions to be called but received one assertion call.

      88 |
      89 |   test('(100) should return a rejected promise with an Error object', () => {
    > 90 |     expect.assertions(2);
         |            ^
      91 |     const promise = checkDoubleDigits(100);
      92 |     expect(promise).toBeInstanceOf(Promise);
      93 |     return expect(promise).rejects.toBeInstanceOf(Error);

      at Object.<anonymous> (3-UsingAPIs/Week1/unit-tests/ex2-checkDoubleDigits.test.js:90:12)

Test Suites: 1 failed, 1 total
Tests:       3 failed, 8 passed, 11 total
Snapshots:   0 total
Time:        10.648 s
Ran all test suites matching /ex2-checkDoubleDigits.test.js/i.
2022-09-09 03:51:58 error: *** ESLint Report ***

ex2-checkDoubleDigits.js
  16:32  error  'reject' is defined but never used  no-unused-vars

✖ 1 problem (1 error, 0 warnings)


2022-09-09 03:52:37 info: -------------------------------------------------
2022-09-09 03:52:37 info: >>> Running Unit Test `ex2-checkDoubleDigits` <<<
2022-09-09 03:52:37 info: -------------------------------------------------
2022-09-09 03:52:40 info: All unit tests passed.
2022-09-09 03:52:43 info: All steps were completed successfully
